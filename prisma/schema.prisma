generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "mongodb"
    url      = env("DATABASE_URL")
}

model User {
    id            String    @id @default(auto()) @map("_id") @db.ObjectId
    name          String?
    email         String?   @unique
    emailVerified DateTime?
    image         String?
    password      String?
    createdAt     DateTime  @default(now())
    updatedAt     DateTime  @updatedAt

    workouts       Workout[]
    weightEntryIds String[]
    accounts       Account[]
}

model Account {
    id                String  @id @default(auto()) @map("_id") @db.ObjectId
    userId            String  @db.ObjectId
    type              String
    provider          String
    providerAccountId String
    refresh_token     String? @db.String
    access_token      String? @db.String
    expires_at        Int?
    token_type        String?
    scope             String?
    id_token          String? @db.String
    session_state     String?

    user User @relation(fields: [userId], references: [id], onDelete: Cascade) // link the id from account to user together

    @@unique([provider, providerAccountId])
}

model Workout {
    id          String   @id @default(auto()) @map("_id") @db.ObjectId
    workoutName String
    date        DateTime
    location    String
    exercises   Json
    supersets   Json
    notes       String?
    userId      String   @db.ObjectId
    user        User     @relation(fields: [userId], references: [id])
}

model Exercise {
    id         String  @id @default(auto()) @map("_id") @db.ObjectId
    name       String
    sets       Json
    dropsets   Json?
    inSuperSet Boolean
    userId     String  @db.ObjectId
}
