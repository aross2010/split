generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "mongodb"
    url      = env("DATABASE_URL")
}

model User {
    id            String    @id @default(auto()) @map("_id") @db.ObjectId
    name          String?
    email         String?   @unique
    emailVerified DateTime?
    image         String?
    password      String?
    createdAt     DateTime  @default(now())
    updatedAt     DateTime  @updatedAt

    workouts       Workout[]
    weightEntryIds String[]
    accounts       Account[]
}

model Account {
    id                String  @id @default(auto()) @map("_id") @db.ObjectId
    userId            String  @db.ObjectId
    type              String
    provider          String
    providerAccountId String
    refresh_token     String? @db.String
    access_token      String? @db.String
    expires_at        Int?
    token_type        String?
    scope             String?
    id_token          String? @db.String
    session_state     String?

    user User @relation(fields: [userId], references: [id], onDelete: Cascade) // link the id from account to user together

    @@unique([provider, providerAccountId])
}

model Workout {
    id         String       @id @default(auto()) @map("_id") @db.ObjectId
    typeId     String?      @db.ObjectId
    type       WorkoutName? @relation(fields: [typeId], references: [id])
    date       DateTime
    locationId String?      @db.ObjectId
    location   Location?    @relation(fields: [locationId], references: [id])
    exercises  Exercise[]
    notes      String?
    userId     String       @db.ObjectId
    user       User         @relation(fields: [userId], references: [id])
}

model Exercise {
    id           String       @id @default(auto()) @map("_id") @db.ObjectId
    typeId       String       @db.ObjectId
    type         ExerciseName @relation(fields: [typeId], references: [id])
    workoutId    String       @db.ObjectId
    workout      Workout      @relation(fields: [workoutId], references: [id])
    sets         Json?
    dropsets     Json?
    supersetWith Json? // Exercise[] this field will be used if the exercise is first in the superset
    supersetBy   Json? // Exercise[]
    userId       String       @db.ObjectId
}

model ExerciseName {
    id        String     @id @default(auto()) @map("_id") @db.ObjectId
    name      String
    exercises Exercise[]
    userId    String     @db.ObjectId
}

model WorkoutName {
    id       String    @id @default(auto()) @map("_id") @db.ObjectId
    name     String
    workouts Workout[]
    userId   String    @db.ObjectId
}

model Location {
    id       String    @id @default(auto()) @map("_id") @db.ObjectId
    name     String
    userId   String    @db.ObjectId
    workouts Workout[]
}

model WeightEntry {
    id     String   @id @default(auto()) @map("_id") @db.ObjectId
    weight Float
    date   DateTime
    userId String   @db.ObjectId

    @@unique([date, userId])
}
